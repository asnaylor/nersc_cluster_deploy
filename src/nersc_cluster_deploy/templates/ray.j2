{% extends 'base_sbatch.j2' %}
{% block main %}
nodes=$(scontrol show hostnames $SLURM_JOB_NODELIST)
nodes_array=( $nodes )
head_node_hostname=${nodes_array[0]}
RAY_HEAD_PORT=6379
RAY_NODE_ADDRESS=$head_node_hostname:$RAY_HEAD_PORT

echo "[slurm] - Starting Ray HEAD"
{% if job.metrics %}
export RAY_GRAFANA_IFRAME_HOST={{ job.GF_root_url }}
{% endif %}
srun --nodes=1 --ntasks=1 --cpus-per-task=$((`nproc`/2 - 2)) --cpu-bind=cores -w $head_node_hostname {{ job.srun_flags }} {{ job.shifter_flag }} ray start --head --node-ip-address=$head_node_hostname --port=$RAY_HEAD_PORT --num-cpus=$((`nproc`/2 - 2)) --block &
sleep 15

{% if job.metrics %}
PROMETHEUS_IMAGE="prom/prometheus:v2.42.0"
GRAFANA_IMAGE="grafana/grafana-oss:9.4.3"

PROMETHEUS_DB_DIR=$SCRATCH/ray_cluster/prometheus
GRAFANA_DIR=$SCRATCH/ray_cluster/grafana
mkdir -p $PROMETHEUS_DB_DIR $GRAFANA_DIR

echo "[slurm] - Starting up prometheus"
srun --nodes=1 --ntasks=1 --cpus-per-task=1 --cpu-bind=cores --gpus-per-task=0 -w $head_node_hostname \
shifter \
--image=$PROMETHEUS_IMAGE \
--volume=$PROMETHEUS_DB_DIR:/prometheus \
/bin/prometheus \
--config.file=/tmp/ray/session_latest/metrics/prometheus/prometheus.yml \
--storage.tsdb.path=/prometheus &

echo "[slurm] - Starting up grafana"
srun --nodes=1 --ntasks=1 --cpus-per-task=1 --cpu-bind=cores --gpus-per-task=0 -w $head_node_hostname \
shifter \
--image=$GRAFANA_IMAGE \
--volume=$GRAFANA_DIR:/grafana \
--env GF_PATHS_DATA=/grafana \
--env GF_PATHS_PLUGINS=/grafana/plugins \
--env GF_SERVER_ROOT_URL={{ job.GF_root_url }}/ \
--env GF_PATHS_CONFIG=/tmp/ray/session_latest/metrics/grafana/grafana.ini \
--env GF_PATHS_PROVISIONING=/tmp/ray/session_latest/metrics/grafana/provisioning \
--entrypoint &
{% endif %}
sleep 15

worker_num=$(($SLURM_JOB_NUM_NODES - 1))
if [[ $worker_num -ne 0 ]]; then
    echo "[slurm] - Starting $worker_num Ray worker nodes"
    for ((  i=1; i<=$worker_num; i++ ))
    do
    node_i=${nodes_array[$i]}
    echo "    - $i at $node_i"
    srun --nodes=1 --ntasks=1 --cpu-bind=cores -w $node_i {{ job.srun_flags }} {{ job.shifter_flag }} ray start --address $RAY_NODE_ADDRESS --block &
    done
fi

sleep infinity
{% endblock %}
